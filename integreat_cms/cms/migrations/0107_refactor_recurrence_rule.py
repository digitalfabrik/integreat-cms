from __future__ import annotations

from datetime import datetime, time

# Generated by Django 4.2.16 on 2024-11-05 12:02
from typing import TYPE_CHECKING

from dateutil import rrule
from django.db import migrations, models
from django.utils.timezone import make_aware

from ..constants import frequency, weeks
from ..models import RecurrenceRule

if TYPE_CHECKING:
    from django.apps.registry import Apps
    from django.db.backends.base.schema import BaseDatabaseSchemaEditor


def create_rule_strings(apps: Apps, schema_editor: BaseDatabaseSchemaEditor) -> None:
    """
    Update the role definitions

    :param apps: The configuration of installed applications
    :param schema_editor: The database abstraction layer that creates actual SQL code
    """
    RecurrenceRule = apps.get_model("cms", "RecurrenceRule")

    for rule in RecurrenceRule.objects.all():
        rule.raw_rule = to_ical_rrule(rule)
        rule.save()


def to_ical_rrule(rule: RecurrenceRule) -> str:
    kwargs = {}
    if rule.frequency == frequency.WEEKLY:
        kwargs["byweekday"] = rule.weekdays_for_weekly
    elif rule.frequency == frequency.MONTHLY:
        kwargs["byweekday"] = rrule.weekday(
            rule.weekday_for_monthly,
            weeks.WEEK_TO_RRULE_WEEK[rule.week_for_monthly],
        )
    if rule.recurrence_end_date:
        kwargs["until"] = make_aware(
            datetime.combine(rule.recurrence_end_date, time.max),
            rule.event.start.tzinfo,
        )

    ical_rrule = rrule.rrule(
        getattr(rrule, rule.frequency),
        dtstart=rule.event.start,
        interval=rule.interval,
        **kwargs,
    )
    return ical_rrule


class Migration(migrations.Migration):

    dependencies = [
        ("cms", "0106_update_contact"),
    ]

    operations = [
        migrations.AddField(
            model_name="recurrencerule",
            name="raw_rule",
            field=models.CharField(default="", max_length=255, verbose_name="Raw rule"),
            preserve_default=False,
        ),
        migrations.RunPython(create_rule_strings),
        migrations.RemoveField(
            model_name="recurrencerule",
            name="frequency",
        ),
        migrations.RemoveField(
            model_name="recurrencerule",
            name="interval",
        ),
        migrations.RemoveField(
            model_name="recurrencerule",
            name="week_for_monthly",
        ),
        migrations.RemoveField(
            model_name="recurrencerule",
            name="weekday_for_monthly",
        ),
        migrations.RemoveField(
            model_name="recurrencerule",
            name="weekdays_for_weekly",
        ),
    ]
