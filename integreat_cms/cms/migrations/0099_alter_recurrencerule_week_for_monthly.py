# Generated by Django 4.2.13 on 2024-08-27 09:08

from __future__ import annotations

from typing import TYPE_CHECKING

from django.db import migrations, models

from ..constants import frequency

if TYPE_CHECKING:
    from django.apps.registry import Apps
    from django.db.backends.base.schema import BaseDatabaseSchemaEditor as SchemaEditor


# pylint: disable=unused-argument
def forwards_func(apps: Apps, schema_editor: SchemaEditor) -> None:
    """
    Adopting the old data when applying this migration
    :param apps: The configuration of installed applications
    :type apps: ~django.apps.registry.Apps
    :param schema_editor: The database abstraction layer that creates actual SQL code
    :type schema_editor: ~django.db.backends.base.schema.BaseDatabaseSchemaEditor
    """
    RecurrenceRule = apps.get_model("cms", "RecurrenceRule")
    for rr in RecurrenceRule.objects.filter(
        frequency=frequency.MONTHLY, week_for_monthly=5
    ):
        rr.week_for_monthly = -1
        rr.save()


# pylint: disable=unused-argument
def reverse_func(apps: Apps, schema_editor: SchemaEditor) -> None:
    """
    Reverting (most of the) newer data when reverting this migration
    :param apps: The configuration of installed applications
    :type apps: ~django.apps.registry.Apps
    :param schema_editor: The database abstraction layer that creates actual SQL code
    :type schema_editor: ~django.db.backends.base.schema.BaseDatabaseSchemaEditor
    """
    RecurrenceRule = apps.get_model("cms", "RecurrenceRule")
    for rr in RecurrenceRule.objects.filter(
        frequency=frequency.MONTHLY, week_for_monthly__lt=0
    ):
        if rr.week_for_monthly == -1:
            rr.week_for_monthly = 5
        else:
            rr.week_for_monthly = 3
        rr.save()


class Migration(migrations.Migration):
    """
    Remove 5 as designation for last week, use -1 (and -2) instead.
    """

    dependencies = [
        ("cms", "0098_add_contact"),
    ]

    operations = [
        migrations.AlterField(
            model_name="recurrencerule",
            name="week_for_monthly",
            field=models.IntegerField(
                blank=True,
                choices=[
                    (1, "First week"),
                    (2, "Second week"),
                    (3, "Third week"),
                    (4, "Fourth week"),
                    (-1, "Last week"),
                    (-2, "Second last week"),
                ],
                help_text="If the frequency is monthly, this field determines on which week of the month the event takes place",
                null=True,
                verbose_name="week",
            ),
        ),
        migrations.RunPython(forwards_func, reverse_func),
    ]
