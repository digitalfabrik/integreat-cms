# Generated by Django 4.2.16 on 2025-07-15 17:17

from __future__ import annotations

from typing import TYPE_CHECKING

from django.db import migrations, models
from django.db.utils import Error

if TYPE_CHECKING:
    from django.apps.registry import Apps
    from django.db.backends.base.schema import BaseDatabaseSchemaEditor


def forwards_func(
    apps: Apps,
    _schema_editor: BaseDatabaseSchemaEditor,
) -> None:
    """
    Data migration step to copy all data over to the new field
    """
    Event = apps.get_model("cms", "Event")
    if Event.objects.exclude(location=None).exclude(online_link="").exists():
        raise Error("""
    ################################################################################
    #  You need to ensure no cms.Event has both a location AND a online_link set.  #
    #  This cannot be done automatically without data loss. You need to decide.    #
    #  If you don't care about your data, run in   integreat-cms-cli dbshell       #
UPDATE cms_event
SET online_link = ''
WHERE NOT location_id IS NULL
      AND NOT online_link = '';
    ################################################################################""")
    Event.objects.exclude(online_link="").update(meeting_url=models.F("online_link"))


def reverse_func(
    apps: Apps,
    _schema_editor: BaseDatabaseSchemaEditor,
) -> None:
    """
    Data migration when reverting this migration
    """
    Event = apps.get_model("cms", "Event")
    Event.objects.exclude(meeting_url="").update(online_link=models.F("meeting_url"))


class Migration(migrations.Migration):
    dependencies = [
        ("cms", "0139_enable_pg_trgm"),
    ]

    operations = [
        migrations.AddField(
            model_name="event",
            name="meeting_url",
            field=models.URLField(
                blank=True,
                default="",
                help_text="Link to the online event if it has no physical location.",
                verbose_name="Online event link",
            ),
        ),
        migrations.RunPython(forwards_func, reverse_func),
        migrations.AddConstraint(
            model_name="event",
            constraint=models.CheckConstraint(
                check=models.Q(
                    ("meeting_url", ""), ("location", None), _connector="OR"
                ),
                name="meeting_url_requires_no_location",
                violation_error_message="An event with a location can't have a meeting URL",
            ),
        ),
        migrations.RemoveField(
            model_name="event",
            name="online_link",
        ),
    ]
